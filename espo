
my contract had an amount of hours in a time span
|....
|......
|.....
|......
 quality and stress management

j  s
` /
 p - b
/ \
i  d

and it gets defined by events
is fuzzy in the different sensitivities
 ownership

have a development value and stake
defined by user welcomes
 changing user rings

/.//./

i was just the first proxy user
 what is devops?

in the command line interface, the feeling of boredom doesn't last long
feeling bored
factoring resources
one starts spotting regularities
 the prototypes rose from shell working in repos

the community is also being created
lack of confidence limits communication
we are not used to truly actionable sharing
i put it here in front of everyone
translating through software
 community controlled development

dive in dive out
trello, github issues, slack messages, github notifications, twitter
 thought dashboard, written in the shower

 how i managed quality and stress, motivation

  danger: laboratory area

 every new user affects the weights

 pandoc's structure

 pandoc's modules

 a doctest

 evolution of converti

users call close to project rollout
[community call in ...](https://groups.google.com/forum/#!topic/pandoc-discuss/5W-l10MzeG8)
 do we want to customise for sphinx?

in our software we maintain networks of probabilities
that means i had some branches ready
 these days i'm pruning

jgm/pandoc
italia/docs-italia-comandi-conversione
italia/docs-italia-pandoc-filters
 github

 user support

because it's an early phase?
the way we communicate our work
our overall throughput
 what is adoption?

success is adoption
pandoc is working and broken
 what is success in this project?

and enthusiasm is an heavily monetised resource
 in 2018 we want to change towards more enthusiasm

 despite university i failed being motivated without the flow of support

 code and community

in the best case they would become comments, documentation
analysis notes
 seeding and pruning

collaboration as intensification of communications
i put pandoc-to-sphinx out there and no collaboration happened
 online and batch

the main entry point's README was not in italian
two communities communicate through the source code
 globalisation and localisation

 reliable and usable

 portability and expressivity

  the dimensions explored moving the ship through its multidimensional space

 know your turtle modules

 by the end of the project running our regression tests becomes a requirement

view from the public's perspective
embarassing once i realised the publicity
surprising
 committing small patches

user testing
 proof of concept

haskell's fame for refactorings
 evolutionary prototyping

like a plant
like a ship
like a virus
 we can engineer software

is it a good idea to have a wrapper?
 codesign

and this is the context where i enjoy to work
so it has a broad scope and it can feel shallow
 it's also a story of innovation

examples
cases
formats
syntax errors
sphinx features
semantic definitions
existing
 the expected dimensions

 better than greenfield

 hammer pandoc

 $ git push italia HEAD

