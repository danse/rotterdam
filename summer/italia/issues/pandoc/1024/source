






























(

https://github.com/jgm/pandoc/issues/1024#issuecomment-354303232 by @mb21

type Rowspan = Int
type Colspan = Int
type Caption = [Block]
type ShortCaption = [Inline]
type Colwidth = Maybe Double
data Cell = Cell       Attr Rowspan Colspan [Block]
          | HeaderCell Attr Rowspan Colspan [Block]
          | NoCell -- if this slot is taken by anoter cell's row/colspan (idea from docutils snippet above)
type Row = [Cell]
-- constructor for Table in Block:
   | Table Attr Caption ShortCaption [(Alignment, Colwidth)] [Row]

data Cell = Cell [BodyPart]
            deriving Show

Tbl String TblGrid TblLook [Row]

candidate data models

)

the last proposal from jgm is rather essential
by proposing a pull request with these core changes i can help unlocking
but there can be a set of core changes enabling the community to help
this feature seems rather far because it requires a lot of changes

it also has comments in general about the data model but it seems ignored
first comment on dependent types, the second is the proposal by mb21
https://github.com/jgm/pandoc/issues/1024#issuecomment-318936094

a more precise estimation can be very useful for planning

http://www.cse.chalmers.se/~rjmh/QuickCheck/manual.html
we can generate random well-formed tables built in this data model
we have no guarantee that the parsed table is well-formed

latek
https://www.latex-tutorial.com/tutorials/tables/#Multirows

docutils
https://github.com/jgm/pandoc/issues/1024#issuecomment-305357795

https://github.com/jgm/pandoc/issues/1024

https://github.com/atorin/pandoc-test/issues/21

https://trello.com/c/oXjsW2UG/100 problema-tabella-multicelle